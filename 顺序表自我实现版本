#include <stdio.h>
#include <stdlib.h>

#define maxsize 101
#define ture 1
#define false 0
/*顺序表绝不用指针来操作，0号位放len 这样下标与位序保持一致*/

typedef struct Sqlist
{
    int A[maxsize];
    int len;
}Sqlist;


int FindX(Sqlist List,int X);
int SearchK(Sqlist List,int K);
void DeleteK(Sqlist *p,int K);//作删除和插入操作时候要考虑到长度变化，要引用，即传地址，实参&List， 到时&List代入p的位置就变成*(&List), 而*号就是翻译地址上的内容，此时可操作，
void Insert(Sqlist *p,int K,int X);//此处对比指针的指针，**rear,而我们实参用&rear, *(&rear)就是rear这个指针，*（&rear）翻译出指针， 按从右到左噢， 再加一个*就是传入指针了，
int main()
{  int x=0,i=1;//建立一个结构体数组
   Sqlist List;

   while(scanf("%d",&x)!=EOF)//初始化结构体中数组并存入元素
       {
        List.A[i]=x;
        i++;
       }

    if(i<maxsize){
        List.len=i-1;

    }else{
        return false;
    }

    List.A[0]=List.len;


    int a=FindX(List, 3);
    int b=SearchK(List,3);
    DeleteK(&List,3);
    for(int j=1;j<=(List.len);j++)
        printf("%d",List.A[j]);
    Insert(&List, 3,30);

    for(int j=1;j<=(List.len);j++)
        printf("%d",List.A[j]);

    return 0;
}

int FindX(Sqlist List,int X)
{   int i=false;
    for(int i=1;i<=(List.len);i++)
        if(X==List.A[i])
            return i;

    return i;
}

int SearchK(Sqlist List,int K)
{
    if(K>0&&K<=List.len)
         return List.A[K];

    return 0;
}
void DeleteK(Sqlist *p,int K)//作删除和插入操作时候要考虑到长度变化，如果我没有用指针指向结构体再传参，当然可以直接引用结构体，如&List
{
    for(int i=K;i<p->len;i++)
        (p->A[i])=(p->A[i+1]);

    p->len=p->len-1;
    printf("len after delete %d",p->len);//检验删除后序列有没有问题
}

void Insert(Sqlist *p,int K,int X)
{
    for(int i=(p->len);i>=K;i--)
        p->A[i+1]=p->A[i];//记得这里要用新的i

    p->A[K]=X;
    p->len=p->len+1;
    printf("len after insert %d",p->len);//检验插入后序列有没有问题
}
